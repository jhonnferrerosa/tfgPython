openapi: 3.1.0
info:
  title: API demostraciones roboticas. 
  description: API que utiliza Kodular para gestionar a las personas que quieran controlar un robot.
  version: 1.0.0

servers:
  - url: http://localhost:5000
    description: El servidor esta montado en local.  para los casos es los que alguna clave del objeto JSON contenga un velor NULL, lo que está pasando, es que no se ha podido conseguir o no se ha solicitado esa funcionalidad, por ejemplo, si el servidor no ha encontrado un robot que esté listo paraa manejar porque todos los robots estén ocupados,
      entonces el valor de la MAC y el valor del idRobot van a estar NULL, ya que no se ha conseguido un robot. 

paths:
  /{idEvento}:
  /demostracionesroboticas/<codigoQR>/<correoelectronico>:
    get:
      summary:  Primer acceso. 
      description: En este endpoint los usuarios se registran dentro de las demostraciones roboticas, ademas se busca un robot para ese usuario, puede ser que devuelva un JSON con un robot que ha encontrado o que  devuelva un JSON con un aviso de que está esperando por un robot.
      parameters:
        - name: codigoQR
          in: path
          description: "Este es el string con el que se identifica a un Evento."
          required: true
          schema:
            type: String
        - name: correoelectronico
          in: path
          description: "En el caso de que se quiera obtener un robot como administrador, entonces este valor tiene que estar rellenado. "
          required: false
          schema:
            type: String
      responses:
        '200':
          description: devuelve un JSON con el id del robot que está listo para trabajar. 
          content:
            application/json:
              schema:
                type: object
                properties:
                  miParametroApodoAsistente:
                    type: string
                  miParametroCodigoQR:
                    type: string
                  miParametroCorreoElectronicoDelAdministrador:
                    type: string
                  miParametroEstado:
                    type: string
                  miParametroIdRobot:
                    type: int
                  miParametroMac:
                    type: string
                  miParametroMiEventoNombreDelEvento:
                    type: string
        '200':
          description: Devuelve un JSON que tiene la clave miParametroEstado avisando de que se está esperando por un robot. 
          content:
            application/json:
              schema:
                type: object
                properties:
                  miParametroApodoAsistente:
                    type: string
                  miParametroCodigoQR:
                    type: string
                  miParametroCorreoElectronicoDelAdministrador:
                    type: string
                  miParametroEstado:
                    type: string
                  miParametroIdRobot:
                    type: int
                  miParametroMac:
                    type: string
                  miParametroMiEventoNombreDelEvento:
                    type: string
        '404':
          description: "Se ha pasado por parametro un una URL con un determinado códigoQR el cual ningun evento de la base de datos tiene ese coódigoQR"
          content:
            application/json:
              schema:
                type: object
                properties:
                  miParametroApodoAsistente:
                    type: string
                  miParametroCodigoQR:
                    type: string
                  miParametroCorreoElectronicoDelAdministrador:
                    type: string
                  miParametroEstado:
                    type: string
                  miParametroIdRobot:
                    type: int
                  miParametroMac:
                    type: string
                  miParametroMiEventoNombreDelEvento:
                    type: string
        '500':
          description: "Ha ocurrido un error inesperado en la base de datos. "
          content:
            application/json:
              schema:
                type: object
                properties:
                  miParametroApodoAsistente:
                    type: string
                  miParametroCodigoQR:
                    type: string
                  miParametroCorreoElectronicoDelAdministrador:
                    type: string
                  miParametroEstado:
                    type: string
                  miParametroIdRobot:
                    type: int
                  miParametroMac:
                    type: string
                  miParametroMiEventoNombreDelEvento:
                    type: string
  /aceptarrobot:
    post:
      summary: opción de empezar a manejar un robot. 
      description: en el caso de que un usuario acepte el robot que se le ha mostrado, pulsará aceptar en la aplcación de Kodular y entonces enviará un JSON con  el robot al que quiera manejar. Sólo puede de volver un JSON que dice que se está manajando un robot, en el caso de que devuelva cualquier otra respuesta, eso significa que el robot que se ha acaptado, por alguna razón ya no está disponible, y esto se debe a que internamente este primer endpoint ha tendido que llamar al primero para hacer la búsqueda de un nuevo robot. 
      requestBody:
        description: se va a enviar a la API un JSON con el código QR, un correo de algún administrador (puede ser NULL) y el idRobot del robot que se quiere manejar. 
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                miParametroCodigoQR:
                  type: string
                miParametroCorreoElectronicoDelAdministrador:
                  type: string
                miParametroIdRobot:
                  type: int
      responses:
        '200':
          description: devuelve un JSON con el id Robot y la MAC del robot que está controlando.  
          content:
            application/json:
              schema:
                type: object
                properties:
                  miParametroApodoAsistente:
                    type: string
                  miParametroCodigoQR:
                    type: string
                  miParametroCorreoElectronicoDelAdministrador:
                    type: string
                  miParametroEstado:
                    type: string
                  miParametroIdRobot:
                    type: int
                  miParametroMac:
                    type: string
                  miParametroMiEventoNombreDelEvento:
                    type: string
        '404':
          description: "Se ha pasado por el POST un determinado códigoQR el cual ningun evento de la base de datos tiene ese coódigoQR"
          content:
            application/json:
              schema:
                type: object
                properties:
                  miParametroApodoAsistente:
                    type: string
                  miParametroCodigoQR:
                    type: string
                  miParametroCorreoElectronicoDelAdministrador:
                    type: string
                  miParametroEstado:
                    type: string
                  miParametroIdRobot:
                    type: int
                  miParametroMac:
                    type: string
                  miParametroMiEventoNombreDelEvento:
                    type: string


  /rechazarrobot:
    post:
      summary: esta es la opción de rechazar un robot mostrado.
      description: al usuario se le ha mostrado un robot por pantalla y este tiene la opción de rechazarlo, ya que puede ser que esté esperando por otro. En este caso se enviará por el POST el id del robot que se ha rechazado. Al asistente, se le devolverá el resultado del primer endpint ejecutado ya que ese esnpoint es el que localiza robots disponibles para los asistentes
      requestBody:
        description: se va a enviar a la API un JSON con el código QR, un correo de algún administrador (puede ser NULL) y el idRobot del robot que se quiere manejar. 
        required: true
        content:
          'application/json':
            schema:
              type: object
                properties:
                  miParametroCodigoQR:
                    type: string
                  miParametroCorreoElectronicoDelAdministrador:
                    type: string
                  miParametroIdRobot:
                    type: int
                    
       responses: 
        description:  Como ya se ha dicho antes, la respueta va a ser la misma que las que genere el endpoint /demostracionesroboticas/<codigoQR>/<correoelectronico>  ya que una vez rechazado un robot, este es el que hace la búsqueda de un nuevo robot disponible. 
        '404':
          description: "Se ha pasado por el POST un determinado códigoQR el cual ningun evento de la base de datos tiene ese coódigoQR"
          content:
            application/json:
              schema:
                type: object
                properties:
                  miParametroApodoAsistente:
                    type: string
                  miParametroCodigoQR:
                    type: string
                  miParametroCorreoElectronicoDelAdministrador:
                    type: string
                  miParametroEstado:
                    type: string
                  miParametroIdRobot:
                    type: int
                  miParametroMac:
                    type: string
                  miParametroMiEventoNombreDelEvento:
                    type: string
          