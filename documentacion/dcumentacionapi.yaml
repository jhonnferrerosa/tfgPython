openapi: 3.0.0
info:
  title: API demostraciones roboticas. 
  description: API que utiliza Kodular para gestionar a las personas que quieran controlar un robot.
  version: 1.0.0

servers:
  - url: http://localhost:5000
    description: El servidor esta montado en local.  para los casos es los que alguna clave del objeto JSON contenga un velor NULL, lo que está pasando, es que no se ha podido conseguir o no se ha solicitado esa funcionalidad, por ejemplo, si el servidor no ha encontrado un robot que esté listo paraa manejar porque todos los robots estén ocupados,
      entonces el valor de la MAC y el valor del idRobot van a estar NULL, ya que no se ha conseguido un robot. 

security:
  - CSRFtoken: []
  
  

paths:
  /demostracionesroboticas/{codigoQR}:
    get:
      summary: Primer acceso de los asistentespara manejar un robot
      description: En este endpoint los asistentes se registran dentro de las demostraciones roboticas, ademas se busca un robot para ese asistente, puede ser que devuelva un JSON con un robot que ha encontrado o que  devuelva un JSON con un aviso de que está esperando por un robot, aparte de los errores. 
      parameters:
      - $ref: '#/components/parameters/codigoQR'
      responses:
        '200':
          description: devuelve un JSON con el id del robot que está listo para trabajar. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mensajeDeAPIaCliente'
        '404':
          description: "Se ha pasado por parametro un una URL con un determinado códigoQR el cual ningun evento de la base de datos tiene ese coódigoQR"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mensajeDeAPIaCliente'
        '500':
          description: "Ha ocurrido un error inesperado en la base de datos. "
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mensajeDeAPIaCliente'
                
  /demostracionesroboticas/{codigoQR}/{correoelectronico}:
    get: 
      summary: Primer acceso de los administradores para manejar un robot
      description: En este endpoint los administradores se registran dentro de las demostraciones roboticas, ademas se busca un robot para ese administrador, puede ser que devuelva un JSON con un robot que ha encontrado o que devuelva un
       JSON con un aviso de que está esperando por un robot, aparte de los errores. En el caso de que haya encontrado un robot, este es el momento en el que Kodular debe de quedarse con la foto, ya que cuando se realize el sondeo a 
       la aplicación el cual averigua si Kodular este permitido o no manejar un robot, no se va a mandar la foto, esto se debe a que se quere ahorrar ancho de banda y no mandar una foto cada vez que se quiere averiguar si se puede o no 
       manejar un robot. 
      parameters:
      - $ref: '#/components/parameters/codigoQR'
      - $ref: '#/components/parameters/correoelectronico'
      responses:
        '200':
          description: devuelve un JSON que tiene una clave miParametroEstado que determina si puede aceptar ese robot o rechazarlo. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mensajeDeAPIaCliente'
        '404':
          description: "Se ha pasado por parametro un una URL con un determinado códigoQR el cual ningun evento de la base de datos tiene ese coódigoQR"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mensajeDeAPIaCliente'
        '500':
          description: "Ha ocurrido un error inesperado en la base de datos. "
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mensajeDeAPIaCliente'
  /aceptarrobot: 
    post:
      summary: opción de empezar a manejar un robot por parte del asistentes 
      description: en el caso de que un usuario acepte el robot que se le ha mostrado, pulsará aceptar en la aplcación de Kodular y entonces enviará un JSON con  el robot al que quiera manejar. Sólo puede devolver un JSON que dice que se 
      está manejando un robot, en el caso de que se robot ya no esté disponible, le devilverá un JSON con un nuevo robot propuesto o un mensaje de aviso que está esperando por un robot.  En este caso ya la foto del robot se devolverá
      None ya que Kodular debió almacenar la foto cuando se le propuso ese robot, esto es debido a la necesidad de ahorrar ancho de banda, ya que si en cada sondeo que determina si la aplicación de Kodular puede o no menajar el robot
      se tiene que enviar la foto, lo que puede pasar es que todo el sistema se realentize.  
      parameters:
        - name: X-CSRFToken
          in: header
          description: Este endpoint necesita recibir por el heeader el CSRF token que recibio en la primera sollcidud, para que de esta forma solamente la API restful haga las acciones de los clientes que sólo ella autoriza. 
          required: true
          schema:
            type: string
      requestBody:
        description: se va a enviar a la API un JSON con el código QR, un correo de algún administrador (puede ser NULL) y el idRobot del robot que se quiere manejar. 
        required: true
        content: 
          'application/json':
            schema:
              $ref: '#/components/schemas/mensajeDeClienteAlaAPI'
      responses:
        '200':
          description: devuelve un JSON que tiene una clave miParametroEstado que determina si está manejando el robot o está esperando por uno.  
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/mensajeDeAPIaCliente'
        '404':
          description: "Se ha pasado por parametro un una URL con un determinado códigoQR el cual ningun evento de la base de datos tiene ese coódigoQR"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mensajeDeAPIaCliente'
              
  /rechazarrobot:
    post:
      summary: esta es la opción de rechazar un robot mostrado.
      description: al usuario se le ha mostrado un robot por pantalla y este tiene la opción de rechazarlo, ya que puede ser que esté esperando por otro. En este caso se enviará por el POST el id del robot que se ha rechazado. Al usuario, se le devolverá el resultado del primer endpint ejecutado ya que ese enpoint es el que localiza robots disponibles para los usuarios. 
      parameters:
        - name: X-CSRFToken
          in: header
          description: Este endpoint necesita recibir por el heeader el CSRF token que recibio en la primera sollcidud, para que de esta forma solamente la API restful haga las acciones de los clientes que sólo ella autoriza. 
          required: true
          schema:
            type: string
      requestBody:
        description: se va a enviar a la API un JSON con el código QR, un correo de algún administrador (puede ser NULL) y el idRobot del robot que se ha rechazado. 
        required: true
        content: 
          'application/json':
            schema:
              $ref: '#/components/schemas/mensajeDeClienteAlaAPI'
      responses:
        '404':
          description: "Se ha pasado por parametro un una URL con un determinado códigoQR el cual ningun evento de la base de datos tiene ese coódigoQR"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mensajeDeAPIaCliente'
          
            
components:
  parameters:
    codigoQR:
      name: codigoQR
      in: path
      description: Este es el string con el que se identifica a un evento.
      required: true
      schema:
        type: string
    correoelectronico:
      name: correoelectronico
      in: path
      description: "En el caso de que se quiera obtener un robot como administrador, entonces este valor tiene que estar rellenado. "
      required: true
      schema:
        type:  string
      
  schemas:
    mensajeDeAPIaCliente: 
      type: object
      description: este JSON siempre lo va a enviar el servidor al cliente siempre, para saber kodular que es lo que pasado en el back - end, deberá leer la clave miParametroEstado, que indica que es lo que ha sucedido en el back - end. 
      properties:
        miParametroApodoUsuario:
          type: string
        miParametroCodigoQR:
          type: string
        miParametroCorreoElectronicoDelAdministrador:
          type: string
        miParametroEstado:
          type: string
        miParametroIdRobot:
          type: integer
        miParametroMac:
          type: string
        miParametroMiEventoNombreDelEvento:
          type: string
        miParametroCSRFtoken:
          type: string
        miParametroFotoDelRobot: 
          type: string
    mensajeDeClienteAlaAPI:
      type: object
      description: Se va a enviar a la API un JSON con el código QR, un correo de algún administrador (puede ser NULL) y el idRobot del robot del que se quiere manejar la acción, puede ser manejar o rechazar, ya que son las únicas acciones del cliente. 
      properties:
        miParametroCodigoQR:
          type: string
        miParametroCorreoElectronicoDelAdministrador:
          type: string
        miParametroIdRobot:
          type: integer
  securitySchemes:
    CSRFtoken:
      type: apiKey
      in: header
      name: X-CSRF-Token
      description: en el caso de que se quiera poner en la herrammenta postman, en el key se tiene que poner X-CSRF-TOKEN y en value el valor del token se ha obtenido en del JSON